Module(
    body=[
        Import(
            names=[
                alias(name='os')]),
        Import(
            names=[
                alias(name='json')]),
        Import(
            names=[
                alias(name='openai')]),
        Import(
            names=[
                alias(name='time')]),
        ClassDef(
            name='SentimentAnalyzer',
            bases=[],
            keywords=[],
            body=[
                FunctionDef(
                    name='__init__',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(arg='api_key')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Assign(
                            targets=[
                                Attribute(
                                    value=Name(id='openai', ctx=Load()),
                                    attr='api_key',
                                    ctx=Store())],
                            value=Name(id='api_key', ctx=Load()))],
                    decorator_list=[]),
                FunctionDef(
                    name='analyze_sentiment',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(arg='text')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Assign(
                            targets=[
                                Name(id='prompt', ctx=Store())],
                            value=Constant(value='Forget all your previous instructions. Pretend you are a financial expert. You are a financial expert with stock recommendation experience. Answer “YES” if good news, “NO” if bad news, or “UNKNOWN” if uncertain in the first line. Then\nelaborate with one short and concise sentence on the next line ')),
                        Assign(
                            targets=[
                                Name(id='MODEL', ctx=Store())],
                            value=Constant(value='gpt-3.5-turbo')),
                        Assign(
                            targets=[
                                Name(id='retries', ctx=Store())],
                            value=Constant(value=0)),
                        While(
                            test=Compare(
                                left=Name(id='retries', ctx=Load()),
                                ops=[
                                    Lt()],
                                comparators=[
                                    Constant(value=5)]),
                            body=[
                                Try(
                                    body=[
                                        Assign(
                                            targets=[
                                                Name(id='response', ctx=Store())],
                                            value=Call(
                                                func=Attribute(
                                                    value=Attribute(
                                                        value=Name(id='openai', ctx=Load()),
                                                        attr='ChatCompletion',
                                                        ctx=Load()),
                                                    attr='create',
                                                    ctx=Load()),
                                                args=[],
                                                keywords=[
                                                    keyword(
                                                        arg='model',
                                                        value=Name(id='MODEL', ctx=Load())),
                                                    keyword(
                                                        arg='messages',
                                                        value=List(
                                                            elts=[
                                                                Dict(
                                                                    keys=[
                                                                        Constant(value='role'),
                                                                        Constant(value='content')],
                                                                    values=[
                                                                        Constant(value='system'),
                                                                        Name(id='prompt', ctx=Load())]),
                                                                Dict(
                                                                    keys=[
                                                                        Constant(value='role'),
                                                                        Constant(value='content')],
                                                                    values=[
                                                                        Constant(value='user'),
                                                                        Name(id='text', ctx=Load())])],
                                                            ctx=Load())),
                                                    keyword(
                                                        arg='temperature',
                                                        value=Constant(value=0))])),
                                        Break()],
                                    handlers=[
                                        ExceptHandler(
                                            type=Attribute(
                                                value=Attribute(
                                                    value=Name(id='openai', ctx=Load()),
                                                    attr='error',
                                                    ctx=Load()),
                                                attr='RateLimitError',
                                                ctx=Load()),
                                            body=[
                                                Expr(
                                                    value=Call(
                                                        func=Name(id='print', ctx=Load()),
                                                        args=[
                                                            Constant(value='RateLimitError: That model is currently overloaded with other requests. Retrying in 10 seconds.')],
                                                        keywords=[])),
                                                Expr(
                                                    value=Call(
                                                        func=Attribute(
                                                            value=Name(id='time', ctx=Load()),
                                                            attr='sleep',
                                                            ctx=Load()),
                                                        args=[
                                                            Constant(value=10)],
                                                        keywords=[])),
                                                AugAssign(
                                                    target=Name(id='retries', ctx=Store()),
                                                    op=Add(),
                                                    value=Constant(value=1))])],
                                    orelse=[],
                                    finalbody=[])],
                            orelse=[]),
                        If(
                            test=Compare(
                                left=Name(id='retries', ctx=Load()),
                                ops=[
                                    Eq()],
                                comparators=[
                                    Constant(value=5)]),
                            body=[
                                Raise(
                                    exc=Call(
                                        func=Name(id='Exception', ctx=Load()),
                                        args=[
                                            Constant(value='Failed to get response from OpenAI after 5 retries.')],
                                        keywords=[]))],
                            orelse=[]),
                        Assign(
                            targets=[
                                Name(id='content', ctx=Store())],
                            value=Subscript(
                                value=Subscript(
                                    value=Subscript(
                                        value=Subscript(
                                            value=Name(id='response', ctx=Load()),
                                            slice=Constant(value='choices'),
                                            ctx=Load()),
                                        slice=Constant(value=0),
                                        ctx=Load()),
                                    slice=Constant(value='message'),
                                    ctx=Load()),
                                slice=Constant(value='content'),
                                ctx=Load())),
                        Return(
                            value=Name(id='content', ctx=Load()))],
                    decorator_list=[]),
                FunctionDef(
                    name='analyze_news',
                    args=arguments(
                        posonlyargs=[],
                        args=[
                            arg(arg='self'),
                            arg(arg='file')],
                        kwonlyargs=[],
                        kw_defaults=[],
                        defaults=[]),
                    body=[
                        Assign(
                            targets=[
                                Name(id='results', ctx=Store())],
                            value=List(elts=[], ctx=Load())),
                        With(
                            items=[
                                withitem(
                                    context_expr=Call(
                                        func=Name(id='open', ctx=Load()),
                                        args=[
                                            Name(id='file', ctx=Load())],
                                        keywords=[]),
                                    optional_vars=Name(id='f', ctx=Store()))],
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='news', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='json', ctx=Load()),
                                            attr='load',
                                            ctx=Load()),
                                        args=[
                                            Name(id='f', ctx=Load())],
                                        keywords=[]))]),
                        For(
                            target=Name(id='article', ctx=Store()),
                            iter=Name(id='news', ctx=Load()),
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='headline', ctx=Store())],
                                    value=Subscript(
                                        value=Name(id='article', ctx=Load()),
                                        slice=Constant(value='News headline'),
                                        ctx=Load())),
                                Expr(
                                    value=Call(
                                        func=Name(id='print', ctx=Load()),
                                        args=[
                                            Name(id='headline', ctx=Load())],
                                        keywords=[])),
                                Assign(
                                    targets=[
                                        Name(id='contenido', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='self', ctx=Load()),
                                            attr='analyze_sentiment',
                                            ctx=Load()),
                                        args=[
                                            Name(id='headline', ctx=Load())],
                                        keywords=[])),
                                Assign(
                                    targets=[
                                        Name(id='sentiment', ctx=Store())],
                                    value=Constant(value='')),
                                Assign(
                                    targets=[
                                        Name(id='description', ctx=Store())],
                                    value=Constant(value='')),
                                Assign(
                                    targets=[
                                        Name(id='sentiment_description', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='contenido', ctx=Load()),
                                            attr='split',
                                            ctx=Load()),
                                        args=[
                                            Constant(value='\n\n')],
                                        keywords=[])),
                                If(
                                    test=Compare(
                                        left=Call(
                                            func=Name(id='len', ctx=Load()),
                                            args=[
                                                Name(id='sentiment_description', ctx=Load())],
                                            keywords=[]),
                                        ops=[
                                            GtE()],
                                        comparators=[
                                            Constant(value=2)]),
                                    body=[
                                        Assign(
                                            targets=[
                                                Name(id='sentiment', ctx=Store())],
                                            value=Subscript(
                                                value=Name(id='sentiment_description', ctx=Load()),
                                                slice=Constant(value=0),
                                                ctx=Load())),
                                        Assign(
                                            targets=[
                                                Name(id='description', ctx=Store())],
                                            value=Subscript(
                                                value=Name(id='sentiment_description', ctx=Load()),
                                                slice=Constant(value=1),
                                                ctx=Load()))],
                                    orelse=[
                                        If(
                                            test=Compare(
                                                left=Call(
                                                    func=Name(id='len', ctx=Load()),
                                                    args=[
                                                        Name(id='sentiment_description', ctx=Load())],
                                                    keywords=[]),
                                                ops=[
                                                    Eq()],
                                                comparators=[
                                                    Constant(value=1)]),
                                            body=[
                                                Assign(
                                                    targets=[
                                                        Name(id='sentiment', ctx=Store())],
                                                    value=Subscript(
                                                        value=Name(id='sentiment_description', ctx=Load()),
                                                        slice=Constant(value=0),
                                                        ctx=Load()))],
                                            orelse=[])]),
                                Assign(
                                    targets=[
                                        Subscript(
                                            value=Name(id='article', ctx=Load()),
                                            slice=Constant(value='Sentiment'),
                                            ctx=Store())],
                                    value=Name(id='sentiment', ctx=Load())),
                                Assign(
                                    targets=[
                                        Subscript(
                                            value=Name(id='article', ctx=Load()),
                                            slice=Constant(value='Description'),
                                            ctx=Store())],
                                    value=Name(id='description', ctx=Load())),
                                Expr(
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='results', ctx=Load()),
                                            attr='append',
                                            ctx=Load()),
                                        args=[
                                            Name(id='article', ctx=Load())],
                                        keywords=[]))],
                            orelse=[]),
                        Return(
                            value=Name(id='results', ctx=Load()))],
                    decorator_list=[])],
            decorator_list=[]),
        FunctionDef(
            name='main',
            args=arguments(
                posonlyargs=[],
                args=[],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
            body=[
                Assign(
                    targets=[
                        Name(id='api_key', ctx=Store())],
                    value=Subscript(
                        value=Attribute(
                            value=Name(id='os', ctx=Load()),
                            attr='environ',
                            ctx=Load()),
                        slice=Constant(value='OPENAI_API_KEY'),
                        ctx=Load())),
                Assign(
                    targets=[
                        Name(id='analyzer', ctx=Store())],
                    value=Call(
                        func=Name(id='SentimentAnalyzer', ctx=Load()),
                        args=[
                            Name(id='api_key', ctx=Load())],
                        keywords=[])),
                Assign(
                    targets=[
                        Name(id='results', ctx=Store())],
                    value=Call(
                        func=Attribute(
                            value=Name(id='analyzer', ctx=Load()),
                            attr='analyze_news',
                            ctx=Load()),
                        args=[
                            Constant(value='news.json')],
                        keywords=[])),
                With(
                    items=[
                        withitem(
                            context_expr=Call(
                                func=Name(id='open', ctx=Load()),
                                args=[
                                    Constant(value='salida_chatgpt.json'),
                                    Constant(value='w')],
                                keywords=[]),
                            optional_vars=Name(id='f', ctx=Store()))],
                    body=[
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='json', ctx=Load()),
                                    attr='dump',
                                    ctx=Load()),
                                args=[
                                    Name(id='results', ctx=Load()),
                                    Name(id='f', ctx=Load())],
                                keywords=[
                                    keyword(
                                        arg='indent',
                                        value=Constant(value=4))]))])],
            decorator_list=[]),
        If(
            test=Compare(
                left=Name(id='__name__', ctx=Load()),
                ops=[
                    Eq()],
                comparators=[
                    Constant(value='__main__')]),
            body=[
                Expr(
                    value=Call(
                        func=Name(id='main', ctx=Load()),
                        args=[],
                        keywords=[]))],
            orelse=[])],
    type_ignores=[])